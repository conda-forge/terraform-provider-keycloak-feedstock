{% set provider = "keycloak" %}
{% set goname = "github.com/mrparkers/terraform-provider-"+provider.lower() %}
{% set version = "1.17.1" %}

{% set name = goname.split('/')[-1] %}

{% set x4_plugin = name + '_v' + version + "_x4" %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  url: "https://{{ goname }}/archive/{{ version }}.tar.gz"
  sha256: 4847deaf10c845d46d11d7360ff43d7e418d3d93b5be6ea695a6672654fc98a7

build:
  number: 0
  script:
    - go build -v -o {{ target_gobin }}{{ x4_plugin }}{{ target_goexe }}

requirements:
  build:
    - {{ compiler('go') }} 1.13
  run:
    - terraform 0.12

test:
  commands:
    # Create a sample init.tf loading the provider
    - echo 'provider "{{ provider|lower }}" { version="{{ version }}" }' > init.tf  # [unix]
    - echo provider "{{ provider|lower }}" { version="{{ version }}" } > init.tf    # [win]

    # Initialize
    - terraform init

    # Tests that init was successful
    - test -f .terraform/plugins/{{ target_goos }}_{{ target_goarch }}/lock.json              # [unix]
    - if not exist .terraform\plugins\{{ target_goos }}_{{ target_goarch }}\lock.json exit 1  # [win]

    # Test that the provider was not downloaded
    - test ! -f .terraform/plugins/{{ target_goos }}_{{ target_goarch }}/{{ x4_plugin }}{{ target_goexe }}        # [unix]
    - if exist .terraform\plugins\{{ target_goos }}_{{ target_goarch }}\{{ x4_plugin }}{{ target_goexe }} exit 1  # [win]

about:
  home: https://github.com/mrparkers/terraform-provider-keycloak
  license: MIT
  license_file: LICENSE
  license_family: MIT
  summary: "Terraform provider for Keycloak."
  doc_url: https://github.com/mrparkers/terraform-provider-keycloak
  dev_url: https://github.com/mrparkers/terraform-provider-keycloak

extra:
  recipe-maintainers:
    - rluria14
    - oblute
    - conda-forge/terraform
